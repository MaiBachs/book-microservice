version : "2.1"

services:

  discovery-server:

    image: book-microservice/discovery-server-image

    container_name: discovery-server-container

    build:

      context: .

      dockerfile: ./DiscoveryServer/Dockerfile

    hostname: discovery-server

    ports:

      - "8761:8761"

    networks:

      - microservicesnet

 

  e-book-service:

    image: book-microservice/e-book-image

    container_name: e-book-container

    build:

      context: .

      dockerfile: ./Ebook/Dockerfile

    # restart: on-failure

    env_file: ./.env

    ports:
      - $EBOOK_LOCAL_PORT:$EBOOK_DOCKER_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useSSL=false",
        "spring.datasource.username" : "$MYSQLDB_USER",
        "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL8Dialect",
        "spring.jpa.hibernate.ddl-auto" : "update",
        "eureka.client.service-url.defaultZone" : "http://discovery_container:8761/eureka"
      }'

    # volumes:
    #   - .m2:/root/.m2
      
    networks:

      - microservicesnet

  mysqldb:
    image: mysql:latest

    container_name: mysqldb

    restart: always

    env_file: ./.env

    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE

    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT  

    networks:

      - microservicesnet

    # volumes:
    #   - db:/var/lib/mysql

networks:

  microservicesnet: